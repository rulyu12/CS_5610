{"ast":null,"code":"import{MAX_CHALLENGES}from'../../constants/settings';import{CompletedRow}from'./CompletedRow.js';import{CurrentRow}from'./CurrentRow.js';import{EmptyRow}from'./EmptyRow.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Grid=function Grid(_ref){var solution=_ref.solution,guesses=_ref.guesses,currentGuess=_ref.currentGuess,isRevealing=_ref.isRevealing,currentRowClassName=_ref.currentRowClassName;var empties=guesses.length<MAX_CHALLENGES()-1?Array.from(Array(MAX_CHALLENGES()-1-guesses.length)):[];return/*#__PURE__*/_jsxs(_Fragment,{children:[guesses&&guesses.map(function(guess,i){return/*#__PURE__*/_jsx(CompletedRow,{solution:solution,guess:guess,isRevealing:isRevealing&&guesses.length-1===i},i);}),guesses.length<MAX_CHALLENGES()&&/*#__PURE__*/_jsx(CurrentRow,{guess:currentGuess,className:currentRowClassName}),empties.map(function(_,i){return/*#__PURE__*/_jsx(EmptyRow,{},i);})]});};","map":{"version":3,"names":["MAX_CHALLENGES","CompletedRow","CurrentRow","EmptyRow","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Grid","_ref","solution","guesses","currentGuess","isRevealing","currentRowClassName","empties","length","Array","from","children","map","guess","i","className","_"],"sources":["/Users/ruoxilyu/Downloads/CS5610/Wordle/src/components/grid/Grid.js"],"sourcesContent":["import { MAX_CHALLENGES } from '../../constants/settings'\nimport { CompletedRow } from './CompletedRow.js'\nimport { CurrentRow } from './CurrentRow.js'\nimport { EmptyRow } from './EmptyRow.js'\n\n\n\nexport const Grid = ({\n  solution,\n  guesses,\n  currentGuess,\n  isRevealing,\n  currentRowClassName,\n}) => {\n  const empties =\n    guesses.length < MAX_CHALLENGES() - 1\n      ? Array.from(Array(MAX_CHALLENGES() - 1 - guesses.length))\n      : []\n\n  return (\n    <>\n      {guesses && guesses.map((guess, i) => (\n        <CompletedRow\n          key={i}\n          solution={solution}\n          guess={guess}\n          isRevealing={isRevealing && guesses.length - 1 === i}\n        />\n      ))}\n      {guesses.length < MAX_CHALLENGES() && (\n        <CurrentRow guess={currentGuess} className={currentRowClassName} />\n      )}\n      {empties.map((_, i) => (\n        <EmptyRow key={i} />\n      ))}\n    </>\n  )\n}\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,0BAA0B,CACzD,OAASC,YAAY,KAAQ,mBAAmB,CAChD,OAASC,UAAU,KAAQ,iBAAiB,CAC5C,OAASC,QAAQ,KAAQ,eAAe,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAIxC,MAAO,IAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAAC,IAAA,CAMX,IALJ,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACRC,OAAO,CAAAF,IAAA,CAAPE,OAAO,CACPC,YAAY,CAAAH,IAAA,CAAZG,YAAY,CACZC,WAAW,CAAAJ,IAAA,CAAXI,WAAW,CACXC,mBAAmB,CAAAL,IAAA,CAAnBK,mBAAmB,CAEnB,GAAM,CAAAC,OAAO,CACXJ,OAAO,CAACK,MAAM,CAAGlB,cAAc,EAAE,CAAG,CAAC,CACjCmB,KAAK,CAACC,IAAI,CAACD,KAAK,CAACnB,cAAc,EAAE,CAAG,CAAC,CAAGa,OAAO,CAACK,MAAM,CAAC,CAAC,CACxD,EAAE,CAER,mBACET,KAAA,CAAAF,SAAA,EAAAc,QAAA,EACGR,OAAO,EAAIA,OAAO,CAACS,GAAG,CAAC,SAACC,KAAK,CAAEC,CAAC,qBAC/BnB,IAAA,CAACJ,YAAY,EAEXW,QAAQ,CAAEA,QAAS,CACnBW,KAAK,CAAEA,KAAM,CACbR,WAAW,CAAEA,WAAW,EAAIF,OAAO,CAACK,MAAM,CAAG,CAAC,GAAKM,CAAE,EAHhDA,CAAC,CAIN,EACH,CAAC,CACDX,OAAO,CAACK,MAAM,CAAGlB,cAAc,EAAE,eAChCK,IAAA,CAACH,UAAU,EAACqB,KAAK,CAAET,YAAa,CAACW,SAAS,CAAET,mBAAoB,EACjE,CACAC,OAAO,CAACK,GAAG,CAAC,SAACI,CAAC,CAAEF,CAAC,qBAChBnB,IAAA,CAACF,QAAQ,IAAMqB,CAAC,CAAI,EACrB,CAAC,GACD,CAEP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}