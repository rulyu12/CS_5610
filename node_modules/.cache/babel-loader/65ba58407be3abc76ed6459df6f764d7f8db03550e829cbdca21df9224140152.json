{"ast":null,"code":"var _jsxFileName = \"/Users/ruoxilyu/Downloads/CS5610/Wordle/src/components/grid/Grid.js\";\nimport { MAX_CHALLENGES } from '../../constants/settings';\nimport { CompletedRow } from './CompletedRow.js';\nimport { CurrentRow } from './CurrentRow.js';\nimport { EmptyRow } from './EmptyRow.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Grid = _ref => {\n  let {\n    solution,\n    guesses,\n    currentGuess,\n    isRevealing,\n    currentRowClassName\n  } = _ref;\n  const empties = guesses.length < MAX_CHALLENGES() - 1 ? Array.from(Array(MAX_CHALLENGES() - 1 - guesses.length)) : [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [guesses && guesses.map((guess, i) => /*#__PURE__*/_jsxDEV(CompletedRow, {\n      solution: solution,\n      guess: guess,\n      isRevealing: isRevealing && guesses.length - 1 === i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)), guesses.length < MAX_CHALLENGES() && /*#__PURE__*/_jsxDEV(CurrentRow, {\n      guess: currentGuess,\n      className: currentRowClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), empties.map((_, i) => /*#__PURE__*/_jsxDEV(EmptyRow, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_c = Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["MAX_CHALLENGES","CompletedRow","CurrentRow","EmptyRow","jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","_ref","solution","guesses","currentGuess","isRevealing","currentRowClassName","empties","length","Array","from","children","map","guess","i","fileName","_jsxFileName","lineNumber","columnNumber","className","_","_c","$RefreshReg$"],"sources":["/Users/ruoxilyu/Downloads/CS5610/Wordle/src/components/grid/Grid.js"],"sourcesContent":["import { MAX_CHALLENGES } from '../../constants/settings'\nimport { CompletedRow } from './CompletedRow.js'\nimport { CurrentRow } from './CurrentRow.js'\nimport { EmptyRow } from './EmptyRow.js'\n\n\n\nexport const Grid = ({\n  solution,\n  guesses,\n  currentGuess,\n  isRevealing,\n  currentRowClassName,\n}) => {\n  const empties =\n    guesses.length < MAX_CHALLENGES() - 1\n      ? Array.from(Array(MAX_CHALLENGES() - 1 - guesses.length))\n      : []\n\n  return (\n    <>\n      {guesses && guesses.map((guess, i) => (\n        <CompletedRow\n          key={i}\n          solution={solution}\n          guess={guess}\n          isRevealing={isRevealing && guesses.length - 1 === i}\n        />\n      ))}\n      {guesses.length < MAX_CHALLENGES() && (\n        <CurrentRow guess={currentGuess} className={currentRowClassName} />\n      )}\n      {empties.map((_, i) => (\n        <EmptyRow key={i} />\n      ))}\n    </>\n  )\n}\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,0BAA0B;AACzD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,QAAQ,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIxC,OAAO,MAAMC,IAAI,GAAGC,IAAA,IAMd;EAAA,IANe;IACnBC,QAAQ;IACRC,OAAO;IACPC,YAAY;IACZC,WAAW;IACXC;EACF,CAAC,GAAAL,IAAA;EACC,MAAMM,OAAO,GACXJ,OAAO,CAACK,MAAM,GAAGhB,cAAc,EAAE,GAAG,CAAC,GACjCiB,KAAK,CAACC,IAAI,CAACD,KAAK,CAACjB,cAAc,EAAE,GAAG,CAAC,GAAGW,OAAO,CAACK,MAAM,CAAC,CAAC,GACxD,EAAE;EAER,oBACEX,OAAA,CAAAE,SAAA;IAAAY,QAAA,GACGR,OAAO,IAAIA,OAAO,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBAC/BjB,OAAA,CAACJ,YAAY;MAEXS,QAAQ,EAAEA,QAAS;MACnBW,KAAK,EAAEA,KAAM;MACbR,WAAW,EAAEA,WAAW,IAAIF,OAAO,CAACK,MAAM,GAAG,CAAC,KAAKM;IAAE,GAHhDA,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKT,CAAC,EACDf,OAAO,CAACK,MAAM,GAAGhB,cAAc,EAAE,iBAChCK,OAAA,CAACH,UAAU;MAACmB,KAAK,EAAET,YAAa;MAACe,SAAS,EAAEb;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjE,EACAX,OAAO,CAACK,GAAG,CAAC,CAACQ,CAAC,EAAEN,CAAC,kBAChBjB,OAAA,CAACF,QAAQ,MAAMmB,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,CAAC;EAAA,gBACD;AAEP,CAAC;AAAAG,EAAA,GA9BYrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}