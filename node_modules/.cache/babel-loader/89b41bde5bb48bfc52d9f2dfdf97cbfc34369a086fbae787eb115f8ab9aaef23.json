{"ast":null,"code":"var _jsxFileName = \"/Users/ruoxilyu/Downloads/CS5610/Wordle/src/components/grid/CompletedRow.js\";\nimport { getGuessStatuses } from '../../lib/statuses';\nimport { unicodeSplit } from '../../lib/words';\nimport Cell from './Cell.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompletedRow = _ref => {\n  let {\n    solution,\n    guess,\n    isRevealing\n  } = _ref;\n  const statuses = getGuessStatuses(solution, guess);\n  const splitGuess = unicodeSplit(guess);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-1 flex justify-center\",\n    children: splitGuess.map((letter, i) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: letter,\n      status: statuses[i],\n      position: i,\n      isRevealing: isRevealing,\n      isCompleted: true\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = CompletedRow;\nvar _c;\n$RefreshReg$(_c, \"CompletedRow\");","map":{"version":3,"names":["getGuessStatuses","unicodeSplit","Cell","jsxDEV","_jsxDEV","CompletedRow","_ref","solution","guess","isRevealing","statuses","splitGuess","className","children","map","letter","i","value","status","position","isCompleted","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ruoxilyu/Downloads/CS5610/Wordle/src/components/grid/CompletedRow.js"],"sourcesContent":["import { getGuessStatuses } from '../../lib/statuses'\nimport { unicodeSplit } from '../../lib/words'\nimport Cell from './Cell.js'\n\nexport const CompletedRow = ({ solution, guess, isRevealing }) => {\n  const statuses = getGuessStatuses(solution, guess)\n  const splitGuess = unicodeSplit(guess)\n\n  return (\n    <div className=\"mb-1 flex justify-center\">\n      {splitGuess.map((letter, i) => (\n        <Cell\n          key={i}\n          value={letter}\n          status={statuses[i]}\n          position={i}\n          isRevealing={isRevealing}\n          isCompleted\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,IAAI,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAsC;EAAA,IAArC;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAAH,IAAA;EAC3D,MAAMI,QAAQ,GAAGV,gBAAgB,CAACO,QAAQ,EAAEC,KAAK,CAAC;EAClD,MAAMG,UAAU,GAAGV,YAAY,CAACO,KAAK,CAAC;EAEtC,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,0BAA0B;IAAAC,QAAA,EACtCF,UAAU,CAACG,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACxBZ,OAAA,CAACF,IAAI;MAEHe,KAAK,EAAEF,MAAO;MACdG,MAAM,EAAER,QAAQ,CAACM,CAAC,CAAE;MACpBG,QAAQ,EAAEH,CAAE;MACZP,WAAW,EAAEA,WAAY;MACzBW,WAAW;IAAA,GALNJ,CAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAAC,EAAA,GAlBYpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}